#!/bin/sh
# postinst script for easy-rsa-config
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

EASY_RSA_PATH="/usr/share/easy-rsa"
EASY_RSA_CONFIG_VARS_PATH="/usr/share/easy-rsa-config/vars"
USER_EASY_RSA_PATH="/home/$SUDO_USER/easy-rsa"

setup_easy_rsa() {	 
	check_easy_rsa
    	mkdir -p "$USER_EASY_RSA_PATH"
	echo "$EASY_RSA_PATH"/*
	echo "$USER_EASY_RSA_PATH"
	ln -s "$EASY_RSA_PATH"/* "$USER_EASY_RSA_PATH"
	cp "$EASY_RSA_CONFIG_VARS_PATH" "$USER_EASY_RSA_PATH"
	cd "$USER_EASY_RSA_PATH"
	./easyrsa init-pki
	./easyrsa build-ca	
}	

check_easy_rsa() {
	if [ -d "$USER_EASY_RSA_PATH" ]; then
		echo "Configuration for easy_rsa already exists. Do you want to rewrite it? (yes,no)"
		read answer
		if [ "$answer" = "yes" ]; then
			rm -rf "$USER_EASY_RSA_PATH"
		else
			exit 0
		fi
	fi			
}	

case "$1" in
    configure)
    	setup_easy_rsa
    ;;  

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
